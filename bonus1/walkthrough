# bonus1 walkthrough
#

This binary is vulnerable to integer underflow

when we multiply a small integer it wraps back to the positive side.

this is how we bypass the first branching of (atoi(av[1]) < 10)

and overflow the buffer we're copying to with memcpy to write in the address of the local variable.

the same local variable is checked in the second branching that gives us the shell.

So basically we give the program a small integer that when gets multiplied by 4 it results in 44.

40 bytes for the buffer and 4 bytes for the integer.

the payload is something like this:

./bonus1 -2147483637 $(python -c "print 40*'a'+'<value-to-write>(4bytes)'")
